<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JavaScript中的数字存储]]></title>
    <url>%2F2018%2F06%2F30%2Fjs-number%2F</url>
    <content type="text"><![CDATA[JavaScript中数字是不区分整数值与浮点数值的，在JavaScript中所有的数均使用64位的浮点格式来存储以及表示（IEEE 754标准）。所以数值最大是：±1.7976931348623157 X 10^308最小是±5X10^-324，可以表示的整数范围是-9 007 199 254 740 992~9 007 199 254 740 992 （对应的是-2^53~2^53）包含边界值。注意：在对js中的数值进行位操作的时候会自动把64位转化为32进行操作，在对小数进行位操作 比如左移零位，小数会丢弃小数部分转化成整数 JavaScript中数字不一定很准确首先我们先看一段代码123456var x = 0var y = 0x = .3 - .2y = .2 - .1console.log(x == .1 )console.log(y == .1 )运行结果是 false 和 true讲道理的说0.3 - 0.2 = 0.1;0.2-0.1 = 0.1 这个是正确的，那么为什么到了js的代码里就不正确了，解决这个问题，我们首先要看一下js的数字是如何存储的。在本文的前言中我们说到了js用的是IEEE754标准，这个标准规定了浮点数的表示方法（此方法也是目前通用计算机所才用的浮点数存数方式）。在此标准中浮点数有float和double两种存储形式，但由于js是一种弱类型编程语言他的数字采用了double类型存储，也就是我们常说的使用64位来存储数字的双精度型。那么我们是如何利用这64位来存储数据的呢？ 我们都知道科学计数法，即把一个数比如123465.555可以写成1.2345655510^5，这样子不仅读写方便也能减少存数该数字的空间，123456.555是一个十进制的数字，那么我们是把一个二进制的数字是否也可以转化成这个形式，以达到减少存数空间的目的，答案是肯定的。我们把一个十进制数比如：3.25 写成二进制的形式：11001.01，类比十进制的写法，我们可以把他写成 **1.100101\2^4，现在我们看一下这个数字，他由有效数字 1.100101 以及指数 2^4** 以及我们省略了的符号位组成（正数的符号位是 + 负数的是- 零的话严格来说不属于正负，计算机如何处理他我们后文将解释），那么64位的空间我们就知道需要放三大块的东西了：有效数字、指数、符号位 sign bit(符号）：我们在64位的最高位放置符号位，最高位为1，表示数字是整数或者是零 exponent(指数):我们在从左往右再取11位用来表示指数 mantissa(尾数):我们把剩余的52位空间全部用来存储有效数字 1.为了最大限度的利用存储有效数字的52位，我们把小数点以及小数点前的那一个数字给省略掉（正确的化简后尾数会被处理到大于等于1而小于2的区间内，这时候便可省去前导的“1”），所以我们只需要存贮小数点后面的 100101就可以了2.在上图中存储指数的数值叫做阶码，有它转换出来的阶码的数值等于指数的数值，阶码=指数+1023 (科学计数法中的指数是可以为负数的，所以约定减去一个中间数 1023，[0,1022] 表示为负，[1024,2047] 表示为正)。 现在我们知道了一个数是如何存储的，那么我们来想一个问题，1.3转化为二进制是多少0.010011001100....1100，对的你发现了他的小数部分除不尽，那么意味着他的小数部分用64位表示不完。我们来看一下浏览器是如何处理的。12var a = 1.3 console.log(a.toString(2)) 输出的结果是 1.010011001100110011001100110011001100110011001100110011我们来比较一下浏览器计算的1.3和我们手算的1.3的差别12浏览器： 1.0100110011001100110011001100110011001100110011001101手 算 ： 1.0100110011001100110011001100110011001100110011001100*1100* 我们看到浏览器进行了进位操作，浏览器执行的是满1进位，不满则省略的方案所以这也就是为什么我们在进行浮点数运算的时候有时候得不到精确的数值的原因所在了。 1https://zhuanlan.zhihu.com/p/30703042]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>数字</tag>
        <tag>存储</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo下的markdown语法]]></title>
    <url>%2F2018%2F06%2F29%2Fhexo-markdown-grammar%2F</url>
    <content type="text"><![CDATA[入坑了一个新的主题-next,发现他有一些markdown的语法比较特殊，所以整理了一下相关的信息。 markdown语法文章头部的 front-matter目前我用的主题是next，版本是：v5.1.4 ,hexo的版本是3.7.1123456title: hexo下的markdown语法date: 2018-06-29 20:53:40tags: - hexo - markdown语法categories: hexo 以前的tages的写法是 tags: [aa,bb,cc] ，现在我发现tages的写法是：隔行然后缩进前面加中划线，再加上一个空格，然后写上标签。注意：tags 与后面的标签内容必须要有一个空格，在hexo中的很多地方都有这个要求 文章相关的语法标题123===== (等于号)是一级标题------ （减号）是二级标题### 是三级标题 或者使用传统的12345# H1## H2### H3...###### H6 分割线单独一行使用***或者——————（下划线） 删除线使用~~需要删除的文字~~来表示，这个要被删除注意：前后~~与文字没有空格 超链接1[链接的文字](链接的地址 &quot;鼠标指上后链接显示的文字&quot;) 注释用\来注释，类似于转义字符的效果 引用1&gt; 打工是不可能打工的，这辈子都不可能打工的 注意：如果仅在第一行使用 &gt;， 后面相邻的行即使省略 &gt;，也会变成引用内容，可以在结束的语句后面加上两个空格，或者与后面的语句直接空一行 验证写法12345&gt; 打工是不可能打工的，这辈子都不可能打工的打工是不可能打工的，这辈子都不可能打工的 打工是不可能打工的，这辈子都不可能打工的 打工是不可能打工的，这辈子都不可能打工的 效果 打工是不可能打工的，这辈子都不可能打工的打工是不可能打工的，这辈子都不可能打工的打工是不可能打工的，这辈子都不可能打工的 打工是不可能打工的，这辈子都不可能打工的推荐使用后面说的内置标签来引入，效果更好使用&gt;的嵌套格式，没有效果 列表列表有无序和有序之分，考虑到用实际使用无序列表居多，这里只介绍无序列表，无序列表使用空格的缩进来表示层级，+和- 都是他的关键字符,此外给-/+ 和文字中间加入 [ ] 可以有计划表的效果写法123456+ 计划A + [ ] A计划第一步 + [x]首先XXX- [ ] 计划B - [ ] B计划第一步 - [x]首先XXX效果 计划A A计划第一步 首先XXX 计划B B计划第一步 首先XXX 注意：关键字符与文字要有空格，[]中间要用空格打开，否则不生效 插入图片1![Alt text](图片链接 &quot;optional title&quot;) Alt text：图片的Alt标签，用来描述图片的关键词，可以不写。最初的本意是当图片因为某种原因不能被显示时而出现的替代文字，后来又被用于SEO，可以方便搜索引擎根据Alt text里面的关键词搜索到图片。 图片链接：可以是图片的本地地址或者是网址。 “optional title”：鼠标悬置于图片上会出现的标题文字，可以不写。 @tahrwww.zhihu.com/question/21065229/answer/132993179 原生的语法使用效果不好，推荐使用后面hexo以及next的插入图片对应标签语法 表格使用|来分隔不同的单元格，使用-来分隔表头与其他行写法1234| 名字 | 性别 | 年龄 || ---- | ---- | --- || 张三 | 男 | 18 || 赵淑芬 | 女 | 20 |效果 名字 性别 年龄 张三 男 18 赵淑芬 女 20 注意：为了使 Markdown 更清晰，| 和 - 两侧需要至少有一个空格（最左侧和最右侧的 | 外不需要） 如果想改变表格的对齐方式：需要在表头下方的分割线标记中加入 ：此外，表格中可以放其他的markdown的标记 :— 代表左对齐 :–: 代表居中对齐 —: 代表右对齐 默认是左对齐写法1234| 名字 | 性别 | 年龄 || ----: | :----: | :--- || 张三 | 男 | 18 || 赵淑芬 | 女 | 20 | 效果 名字 性别 年龄 张三 男 18 赵淑芬 女 20 hexo 的标签语法hexo 为了显示的效果更好，自身定义了一些标签插件，hexo中文文档链接 引用块123&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;content&#123;% endblockquote %&#125; 普通的引用在blockquote后面不写任何参数，就只是单纯的引用，效果与使用&gt;一样 对书上语言的引用123&#123;% blockquote 作者, 出处 %&#125;xxxxxxxxxxxxxxxxxxxxxxxxxxxx&#123;% endblockquote %&#125; 黑夜无论怎样悠长，白昼总会到来。 莎士比亚麦克白 对网络上的引用123&#123;% blockquote @作者 网络地址 %&#125;xxxxxxxxxxxxxxxxxxxxxxxxxx&#123;% endblockquote %&#125; 有时候，“爱国”，是一个空洞的词语。更多的人是在言语里，在诗歌里”爱国“，他们没有一点点实际行动，甚至充满抱怨。 @余秀华blog.sina.com.cn/yuxiuhua1976 代码块123&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;code snippet&#123;% endcodeblock %&#125; 普通代码块在codeblock不加任何参数的标签，和使用`（单行的时候使用）以及` ` `（多行的时候使用）效果一样123&#123;% codeblock %&#125;console.log(&quot;我叫丰木木&quot;)&#123;% endcodeblock %&#125; 1console.log(&quot;我叫丰木木&quot;) 带有使用语言的代码块（有高亮）123&#123;% codeblock lang:JavaScript %&#125;console.log(&quot;我叫丰木木&quot;)&#123;% endcodeblock %&#125; 1console.log("我叫丰木木") 带有说明的代码块123&#123;% codeblock js控制台输出语句 %&#125;console.log(&quot;我叫丰木木&quot;)&#123;% endcodeblock %&#125; 控制台输出语句1console.log(&quot;我叫丰木木&quot;) 附带有说明网址的代码块123&#123;% codeblock 控制台输出语句 https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log 查看MDN相关解释%&#125;console.log(&quot;我叫丰木木&quot;)&#123;% endcodeblock %&#125; 控制台输出语句查看MDN相关解释1console.log(&quot;我叫丰木木&quot;) 反引号代码块使用``` [title] [lang:language] [url] [link text] ``` 一样可以使用以上几个标签效果注意：反引号代码块后面的参数 在本博客环境下实测没有效果，也就是说使用`是可以当做普通代码块使用 插入iframe1&#123;% iframe url [width] [height] %&#125; 插入image1&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125; 插入Include Code插入source文件夹中的代码文件1&#123;% include_code [title] [lang:language] path/to/file %&#125; next中的标签next文档中文传门 文本居中123456789&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;&lt;!-- 其中 class=&quot;blockquote-center&quot; 是必须的 --&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;blah blah blah&lt;/blockquote&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;&lt;!-- 标签别名 --&gt;&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125; 当我看到人和草木一样生长繁衍，任凭同一个老天他们鼓励阻拦。青春时蓬蓬勃勃，全盛时又该走向凋落，繁华和璀璨都将从记忆中消散。——Shakespeare 《莎士比亚十四行诗》 插入的图片变大使用方式 HTML方式：使用这种方式时，为 img 添加属性 class=”full-image”即可。 标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔。突破容器宽度限制的图片文档链接1234567891011&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;&lt;!-- 其中 class=&quot;full-image&quot; 是必须的 --&gt;&lt;img src=&quot;/image-url&quot; class=&quot;full-image&quot; /&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/image-url&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;title&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;&lt;!-- 别名 --&gt;&lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/image-url&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;title&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt; Bootstrap Callout123&#123;% note class_name %&#125; xxxxxxxxxxxxxxxxxxx &#123;% endnote %&#125; class_name 数值可以为 default primary success info warning danger]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>markdown语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一个文件]]></title>
    <url>%2F2018%2F06%2F28%2Ffist%20document%2F</url>
    <content type="text"><![CDATA[#第一个文件 浪费了大半天，试着用hexo在github上建了一个博客，就一个感觉：小屏幕太毁眼睛了目前先这样后期有如下安排 熟悉hexo 修改目前正在使用的appollo模版 写学习笔记]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
</search>
